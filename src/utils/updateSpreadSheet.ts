import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';
import { MESSAGE_SHEET_ID, MESSAGE_SHEET_TITLE } from '../constants';


export default async function updateSpreadSheet(
  name: string,
  message: string,
  color: string,
  keepTop: boolean = false) {


  // Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
  const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: JSON.parse(process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL || ''),
    key: JSON.parse(process.env.GOOGLE_PRIVATE_KEY || ''),
    scopes: [
      'https://www.googleapis.com/auth/spreadsheets',
    ],
  });

  const doc = new GoogleSpreadsheet(MESSAGE_SHEET_ID, serviceAccountAuth);

  await doc.loadInfo(); // loads document properties and worksheets
  console.log('doc info', doc.title);
  // await doc.updateProperties({ title: 'renamed doc' });

  if (!doc.sheetsByTitle[MESSAGE_SHEET_TITLE]) {
    await doc.addSheet({
      title: MESSAGE_SHEET_TITLE,
      headerValues: ['name', 'message', 'color', 'keepTop']
    });
  }

  const targetSheet = doc.sheetsByTitle[MESSAGE_SHEET_TITLE]

  const rows = await targetSheet.getRows({ limit: 1 }); // can pass in { limit, offset }
  console.log('rows :', rows);
  await targetSheet.addRow({ name, message, color, keepTop: keepTop ? 'v' : '' });
  console.log('color :', color);
  console.log('message :', message);
  console.log('name :', name);
}